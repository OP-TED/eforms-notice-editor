<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>2.7.0</version>
    <relativePath /> <!-- lookup parent from repository -->
  </parent>

  <groupId>eu.europa.ted.eforms</groupId>
  <artifactId>notice-editor-demo</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <name>eForms notice editor demo</name>
  <description>Demo project for Spring Boot</description>
  <packaging>jar</packaging>
  <url>https://docs.ted.europa.eu/eforms/latest/</url>

  <licenses>
    <license>
      <name>European Union Public Licence, Version 1.2</name>
      <url>https://joinup.ec.europa.eu/sites/default/files/custom-page/attachment/2020-03/EUPL-1.2%20EN.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <developers>
    <developer>
      <name>TED and EU Public Procurement Unit</name>
      <email>OP-TED-DEVOPS@publications.europa.eu</email>
      <organization>Publications Office of the European Union</organization>
      <organizationUrl>https://op.europa.eu/</organizationUrl>
    </developer>
  </developers>

  <scm>
    <connection>scm:git:git://github.com/OP-TED/eforms-notice-editor.git</connection>
    <url>https://github.com/OP-TED/eforms-notice-editor.git</url>
  </scm>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

    <!-- Java compiler -->
    <java.version>11</java.version>

    <maven.compiler.source>${java.version}</maven.compiler.source>
    <maven.compiler.target>${java.version}</maven.compiler.target>

    <!-- Versions - eForms -->
    <version.eforms-core>0.1.0-SNAPSHOT</version.eforms-core>

    <!-- Versions - Third-party libraries -->
    <version.spotbugs>4.4.1</version.spotbugs>

    <!-- Versions - Plugins -->
    <version.checkstyle.plugin>3.1.2</version.checkstyle.plugin>
    <version.build-helper.plugin>3.3.0</version.build-helper.plugin>
    <version.install.plugin>2.5.2</version.install.plugin>
    <version.sb-contrib.plugin>7.4.7</version.sb-contrib.plugin>
    <version.spotbugs.plugin>4.3.0</version.spotbugs.plugin>
    <version.spring-boot>2.6.6</version.spring-boot>
    <version.surefire.plugin>3.0.0-M7</version.surefire.plugin> <!-- Versions prior to 3.0.x do not pick up Junit 5 tests correctly. -->
  </properties>

  <dependencyManagement>
    <dependencies>
      <!-- eForms -->
      <dependency>
        <groupId>eu.europa.ted.eforms</groupId>
        <artifactId>eforms-core-java</artifactId>
        <version>${version.eforms-core}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <!-- eForms -->
    <dependency>
      <groupId>eu.europa.ted.eforms</groupId>
      <artifactId>eforms-core-java</artifactId>
    </dependency>
    <!-- Spring Boot -->

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-thymeleaf</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-devtools</artifactId>
      <scope>runtime</scope>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>

    <!-- Use Jetty instead of Tomcat. -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-jetty</artifactId>
    </dependency>

    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
    </dependency>

    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>2.11.0</version>
    </dependency>

    <!-- Helger lib to read codelist genericode (.gc) files. -->
    <dependency>
      <groupId>com.helger</groupId>
      <artifactId>ph-genericode</artifactId>
      <version>6.2.0</version>
    </dependency>
  </dependencies>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>${version.surefire.plugin}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-failsafe-plugin</artifactId>
          <version>${version.surefire.plugin}</version>
          <executions>
            <execution>
              <goals>
                <goal>integration-test</goal>
                <goal>verify</goal>
              </goals>
            </execution>
          </executions>
          <configuration>
            <includes>
              <include>**/*IT.java</include>
              <include>**/*It.java</include>
            </includes>
            <systemPropertyVariables>
              <spring.datasource.url>${datasource.url}</spring.datasource.url>
              <spring.datasource.username>${datasource.username}</spring.datasource.username>
              <spring.datasource.password>${datasource.password}</spring.datasource.password>
            </systemPropertyVariables>
          </configuration>
        </plugin>

        <plugin>
          <artifactId>maven-install-plugin</artifactId>
          <version>${version.install.plugin}</version>
          <configuration>
            <createChecksum>true</createChecksum>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-maven-plugin</artifactId>
          <version>${version.spring-boot}</version>
        </plugin>

        <plugin>
          <groupId>com.github.spotbugs</groupId>
          <artifactId>spotbugs-maven-plugin</artifactId>
          <version>${version.spotbugs.plugin}</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>build-helper-maven-plugin</artifactId>
          <version>${version.build-helper.plugin}</version>
        </plugin>

        <plugin>
          <!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-checkstyle-plugin -->
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-checkstyle-plugin</artifactId>
          <version>${version.checkstyle.plugin}</version>
          <dependencies>
            <dependency>
              <groupId>com.puppycrawl.tools</groupId>
              <artifactId>checkstyle</artifactId>
              <!-- NOTE: versions before 8 something got confused by lambdas, luckily 9 solves this. -->
              <version>9.0</version>
            </dependency>
          </dependencies>
          <configuration>
            <configLocation>/src/main/resources/checkstyle-step2.xml
            </configLocation>
            <encoding>UTF-8</encoding>
            <consoleOutput>true</consoleOutput>
            <failsOnError>false</failsOnError>
            <linkXRef>false</linkXRef>
          </configuration>
          <executions>
            <execution>
              <id>validate</id>
              <phase>validate</phase>
              <goals>
                <goal>check</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <!-- https://mvnrepository.com/artifact/com.github.spotbugs/spotbugs-maven-plugin -->
        <!-- mvn spotbugs:spotbugs -->
        <groupId>com.github.spotbugs</groupId>
        <artifactId>spotbugs-maven-plugin</artifactId>
        <configuration>
          <!-- min less more max https://spotbugs.readthedocs.io/en/stable/effort.html# -->
          <effort>Max</effort>
          <threshold>Medium</threshold>
          <xmlOutput>true</xmlOutput>
          <!-- false, for now ... -->
          <failOnError>false</failOnError>
          <!-- https://stackoverflow.com/questions/52336795/spotbugs-maven-plugin-exclude-a-directory -->
          <excludeFilterFile>spotbugs-exclude.xml</excludeFilterFile>
          <visitors>
            <!-- Aka detectors -->
            <!-- For specific rule excludes see spotbugs-exclude.xml -->
            AppendingToAnObjectOutputStream,AtomicityProblem,BadResultSetAccess,
            BadSyntaxForRegularExpression,BadUseOfReturnValue,BadlyOverriddenAdapter,
            BooleanReturnNull,CheckImmutableAnnotation,CheckRelaxingNullnessAnnotation,
            CheckTypeQualifiers,CloneIdiom,ComparatorIdiom,ConfusedInheritance,
            ConfusionBetweenInheritedAndOuterMethod,CrossSiteScripting,DefaultEncodingDetector,
            DoInsideDoPrivileged,DontCatchIllegalMonitorStateException,DontIgnoreResultOfPutIfAbsent,
            DontUseEnum,DroppedException,DumbMethodInvocations,DumbMethods,DuplicateBranches,
            EqualsOperandShouldHaveClassCompatibleWithThis,ExplicitSerialization,
            FinalizerNullsFields,FindBadCast2,FindBadForLoop,FindComparatorProblems,
            FindDeadLocalStores,FindDoubleCheck,FindEmptySynchronizedBlock,
            FindFieldSelfAssignment,FindFinalizeInvocations,FindFloatEquality,FindHEmismatch,
            FindInconsistentSync2,FindJSR166LockMonitorenter,FindLocalSelfAssignment2,
            FindMaskedFields,FindMismatchedWaitOrNotify,FindNakedNotify,FindNonShortCircuit,
            FindNullDeref,FindNullDerefsInvolvingNonShortCircuitEvaluation,FindOpenStream,
            FindPuzzlers,FindRefComparison,FindReturnRef,FindRoughConstants,FindRunInvocations,
            FindSelfComparison,FindSelfComparison2,FindSleepWithLockHeld,FindSpinLoop,
            FindSqlInjection,FindTwoLockWait,FindUncalledPrivateMethods,FindUnconditionalWait,
            FindUninitializedGet,FindUnrelatedTypesInGenericContainer,FindUnreleasedLock,
            FindUnsatisfiedObligation,FindUnsyncGet,FindUseOfNonSerializableValue,
            FindUselessControlFlow,FindUselessObjects,FormatStringChecker,
            HugeSharedStringConstants,IDivResultCastToDouble,IncompatMask,InconsistentAnnotations,
            InfiniteLoop,InfiniteRecursiveLoop,InheritanceUnsafeGetResource,InitializationChain,
            InitializeNonnullFieldsInConstructor,InstantiateStaticClass,IntCast2LongAsInstant,
            InvalidJUnitTest,IteratorIdioms,LazyInit,LoadOfKnownNullValue,
            LostLoggerDueToWeakReference,MethodReturnCheck,MultithreadedInstanceAccess,
            MutableEnum,MutableLock,MutableStaticFields,Naming,NoteUnconditionalParamDerefs,
            NumberConstructor,OptionalReturnNull,OverridingEqualsNotSymmetrical,
            PreferZeroLengthArrays,QuestionableBooleanAssignment,
            ReadOfInstanceFieldInMethodInvokedByConstructorInSuperclass,
            ReadReturnShouldBeChecked,RedundantConditions,RedundantInterfaces,RepeatedConditionals,
            RuntimeExceptionCapture,SerializableIdiom,StartInConstructor,StaticCalendarDetector,
            StringConcatenation,SuperfluousInstanceOf,SuspiciousThreadInterrupted,SwitchFallthrough,
            SynchronizationOnSharedBuiltinConstant,SynchronizeAndNullCheckField,
            SynchronizeOnClassLiteralNotGetClass,SynchronizingOnContentsOfFieldToProtectField,
            URLProblems,UncallableMethodOfAnonymousClass,UnnecessaryMath,UnreadFields,
            VarArgsProblems,VolatileUsage,WaitInLoop,WrongMapIterator,
            <!-- ,XMLFactoryBypas -->
            <!-- Spotbugs CONTRIB rules -->
            <!-- https://github.com/mebigfatguy/fb-contrib/tree/spotbugs/src/main/java/com/mebigfatguy/fbcontrib/detect -->
            AbnormalFinallyBlockReturn,AbstractClassEmptyMethods,
            <!-- AbstractCollectionScanningDetector, -->
            AbstractOverriddenMethod,AnnotationIssues,ArrayBasedCollections,ArrayIndexOutOfBounds,
            ArrayWrappedCallByReference,BackportReusePublicIdentifiers,
            <!-- BloatedAssignmentScope, -->
            <!-- BloatedSynchronizedBlock, -->
            BogusExceptionDeclaration,BuryingLogic,CharsetIssues,ClassEnvy,
            CloneUsability,CollectionNamingConfusion,CommonsEqualsBuilderToEquals,
            CommonsHashcodeBuilderToHashcode,CommonsStringBuilderToString,CompareClassNameEquals,
            ConcurrentCollectionIssues,ConflatingResourcesAndFiles,ConflictingTimeUnits,
            ConfusingArrayAsList,ConfusingAutoboxedOverloading,ConfusingFunctionSemantics,
            ConstantListIndex,ContainsBasedConditional,ContraVariantArrayAssignment,
            CopiedOverriddenMethod,CustomBuiltXML,CyclomaticComplexity,DateComparison,
            DeletingWhileIterating,DeprecatedTypesafeEnumPattern,DubiousListCollection,
            DubiousMapCollection,DubiousSetOfCollections,
            <!-- EnumIssues, -->
            ExceptionSoftening,FieldCouldBeLocal,FinalParameters,
            FindClassCircularDependencies,FloatingPointLoops,FunctionalInterfaceIssues,
            HangingExecutors,HttpClientProblems,IOIssues,ImmatureClass,ImproperPropertiesUse,
            InappropriateToStringUse,InconsistentKeyNameCasing,IncorrectInternalClassUse,
            InefficientStringBuffering,InheritanceTypeChecking,InvalidConstantArgument,
            JAXRSIssues,JDBCVendorReliance,JPAIssues,LingeringGraphicsObjects,ListIndexedIterating,
            ListUsageIssues,LiteralStringComparison,LocalSynchronizedCollection,
            <!-- LocalTypeDetector, -->
            LoggerOddities,LostExceptionStackTrace,ManualArrayCopy,MapUsageIssues,
            MethodReturnsConstant,MisleadingOverloadModel,
            <!-- MissingMethodsDetector, -->
            ModifyingUnmodifiableCollection,MoreDumbMethods,NeedlessAutoboxing,
            NeedlessCustomSerialization,NeedlessInstanceRetrieval,
            NeedlessMemberCollectionSynchronization,NonCollectionMethodUse,
            NonFunctionalField,NonOwnedSynchronization,NonProductiveMethodCall,
            NonRecycleableTaglibs,NonSymmetricEquals,OptionalIssues,
            OrphanedDOMNode,OverlyConcreteParameter,OverlyPermissiveMethod,
            OverzealousCasting,ParallelLists,PartiallyConstructedObjectAccess,
            PoorMansEnum,PoorlyDefinedParameter,PossibleConstantAllocationInLoop,
            PossibleIncompleteSerialization,PossibleMemoryBloat,
            PossibleUnsuspectedSerialization,PossiblyRedundantMethodCalls,
            PresizeCollections,ReflectionIssues,ReflectionOnObjectMethods,
            RuntimeExceptionDeclared,SQLInLoop,Section508Compliance,SetUsageIssues,
            SideEffectConstructor,SillynessPotPourri,SloppyClassReflection,SluggishGui,
            SpoiledChildInterfaceImplementor,SpuriousThreadStates,StackedTryBlocks,
            StaticArrayCreatedInMethod,StaticMethodInstanceInvocation,
            StringifiedTypes,SuboptimalExpressionOrder,
            <!-- SuspiciousArgumentTypes, -->
            SuspiciousCloneAlgorithm,SuspiciousClusteredSessionSupport,
            SuspiciousComparatorReturnValues,SuspiciousGetterSetterUse,
            SuspiciousJDKVersionUse,SuspiciousLoopSearch,SuspiciousNullGuard,
            SuspiciousShadedClassUse,SuspiciousUninitializedArray,
            SuspiciousWaitOnConcurrentObject,SyncCollectionIterators,
            TailRecursion,TristateBooleanPattern,UnboundMethodTemplateParameter,
            UnitTestAssertionOddities,Unjitable,UnnecessaryApiConversion,
            UnnecessaryNewNullCheck,UnnecessaryStoreBeforeReturn,
            UnrelatedCollectionContents,UnrelatedReturnValues,UnsynchronizedSingletonFieldWrites,
            UnusedParameter,UseAddAll,UseCharacterParameterizedMethod,UseEnumCollections,
            UseSplit,UseToArray,UseTryWithResources,UseVarArgs,WeakExceptionMessaging,WiringIssues,
            WriteOnlyCollection
          </visitors>
          <plugins>
            <plugin>
              <groupId>com.mebigfatguy.sb-contrib</groupId>
              <artifactId>sb-contrib</artifactId>
              <version>${version.sb-contrib.plugin}</version>
            </plugin>
          </plugins>
        </configuration>

        <dependencies>
          <!-- overwrite dependency on spotbugs if you want to specify the version of spotbugs -->
          <dependency>
            <groupId>com.github.spotbugs</groupId>
            <artifactId>spotbugs</artifactId>
            <version>${version.spotbugs}</version>
          </dependency>
        </dependencies>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <!-- Profile "release" caters to the requirements for releasing to Maven Central -->
      <id>release</id>

      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-source-plugin</artifactId>
            <version>3.2.1</version>
            <executions>
              <execution>
                <id>attach-sources</id>
                <goals>
                  <goal>jar-no-fork</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-javadoc-plugin</artifactId>
            <version>3.4.0</version>
            <executions>
              <execution>
                <id>attach-javadocs</id>
                <goals>
                  <goal>jar</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-gpg-plugin</artifactId>
            <version>1.5</version>
            <executions>
              <execution>
                <id>sign-artifacts</id>
                <phase>verify</phase>
                <goals>
                  <goal>sign</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <!-- Prevent gpg from using pinentry programs -->
              <gpgArguments>
                <arg>--pinentry-mode</arg>
                <arg>loopback</arg>
              </gpgArguments>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
